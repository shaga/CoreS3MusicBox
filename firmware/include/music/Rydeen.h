#ifndef RYDEEN_H_
#define RYDEEN_H_

#include "MusicData.h"

static const char RydeenNoteName[] = "RYDEEN";
static const int RydeenNoteSize = 446;
static const NoteData_t RydeenNotes[] = {
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    // A
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(69, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(76, 24),
    REST_NOTE(8),
    // B
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 6),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(79, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 8),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(74, 4),
    SINGLE_PITCH_NOTE(76, 2),
    // B1-3
    SINGLE_PITCH_NOTE(74, 8),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(71, 4),
    // A
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(69, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(76, 24),
    REST_NOTE(8),
    // B
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 6),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(79, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 8),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(74, 4),
    SINGLE_PITCH_NOTE(76, 2),
    // B2-4
    SINGLE_PITCH_NOTE(74, 8),
    REST_NOTE(8),
    // C
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(77, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(77, 6),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(77, 4),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(70, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(74, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(77, 4),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(76, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(77, 4),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(77, 4),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(70, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(75, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(70, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 4),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(76, 4),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(78, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 4),
    // c_to
    DOUBLE_PITCH_NOTE(72, 79, 2),
    DOUBLE_PITCH_NOTE(72, 79, 2),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    // A
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(69, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(76, 24),
    REST_NOTE(8),
    // B
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 6),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(79, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 8),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(74, 4),
    SINGLE_PITCH_NOTE(76, 2),
    // B1-3
    SINGLE_PITCH_NOTE(74, 8),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(71, 4),
    // A
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(69, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(76, 24),
    REST_NOTE(8),
    // B
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 6),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(79, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 8),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(76, 10),
    SINGLE_PITCH_NOTE(74, 4),
    SINGLE_PITCH_NOTE(76, 2),
    // B2-4
    SINGLE_PITCH_NOTE(74, 8),
    REST_NOTE(8),
    // C
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(77, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(77, 6),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(77, 4),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(70, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(74, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(77, 4),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(76, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(77, 4),
    SINGLE_PITCH_NOTE(77, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(77, 4),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(75, 2),
    SINGLE_PITCH_NOTE(70, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(75, 4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(70, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(75, 4),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(76, 4),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(69, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(76, 2),
    SINGLE_PITCH_NOTE(78, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(67, 4),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(72, 4),
    SINGLE_PITCH_NOTE(74, 4),
    // C_Coda
    DOUBLE_PITCH_NOTE(72, 79, 2),
    DOUBLE_PITCH_NOTE(72, 79, 2),
    REST_NOTE(4),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    // D
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(69, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    // D-1
    SINGLE_PITCH_NOTE(76, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    // D
    SINGLE_PITCH_NOTE(72, 16),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(64, 2),
    SINGLE_PITCH_NOTE(69, 24),
    SINGLE_PITCH_NOTE(69, 4),
    SINGLE_PITCH_NOTE(71, 4),
    REST_NOTE(2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(74, 2),
    SINGLE_PITCH_NOTE(72, 2),
    SINGLE_PITCH_NOTE(71, 2),
    SINGLE_PITCH_NOTE(71, 1),
    SINGLE_PITCH_NOTE(69, 1),
    SINGLE_PITCH_NOTE(67, 2),
    SINGLE_PITCH_NOTE(69, 2),
    // D-2
    SINGLE_PITCH_NOTE(76, 16),
    DOUBLE_PITCH_NOTE(69, 76, 4),
    REST_NOTE(12)
};

const MusicInfo_t RydeenInfo{
  RydeenNoteName,
  RydeenNoteSize,
  RydeenNotes,
  1224
};

#endif //RYDEEN_H_
